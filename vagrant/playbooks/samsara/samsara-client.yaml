---
###############################################################################
# This ansible playbook installs all supporting software necessary to run the
# ironic service locally into the vagrant VM attached. Its intent is to provide
# a quickstart development environment that doesn't pollute an engineer's own
# machine.
#
# The vagrant vm's IP address is assumed to be 192.168.99.11
#
# http://docs.openstack.org/developer/ironic/dev/dev-quickstart.html#exercising-the-services-locally
#
- hosts: samsara
  sudo: yes
  tasks:
    ############################################################################
    # Add OpenStack Repositories
    ############################################################################
    - name: Add OpenStack Repositories
      shell: sudo add-apt-repository -y cloud-archive:kilo

     #apt_repository: repo='cloud-archive:kilo'
     #               update_cache=yes
    ############################################################################
    # APT Updates
    ############################################################################
    # Make sure our VM's software is ~@Latest
    - name: Apt Update
      apt: update_cache=yes
           upgrade=dist
           cache_valid_time=86400

    # Reboot if required.
    - name: Reboot system if required
      command: shutdown -r now 'Rebooting to complete system upgrade'
               removes=/var/run/reboot-required
      register: rebooted
    - name: Wait for VM Reboot.
      sudo: no
      local_action: wait_for
                    port=22
                    host="{{ip}}"
                    search_regex=OpenSSH
                    delay=10
                    timeout=900
      when: rebooted.changed
    ############################################################################
    # Install all the needed packages in one go.
    ############################################################################
    - name: Install Required Packages
      apt: name={{item}}
           state=present
      with_items:
      - uvtool
      - uvtool-libvirt
      - qemu-kvm
      - python-libvirt
      - python-dev
      - python-oslo.config
      - virtinst
      - python-pip
      - git
      - htop
    - name: Remove cgroup-lite package
      apt: name=cgroup-lite state=absent
    ############################################################################
    # Install all the needed packages in one go.
    ############################################################################
    - name: Install Required PIP Packages
      pip: name={{item}}
      with_items:
      - openstacksdk
      - oslo.config
      - oslo.db
      - oslo.log
      - oslo.messaging
      - oslo.utils
      - oslo.versionedobjects
      - psutil
      - subprocess32
      - dataset
      #- procinfo
    ############################################################################
    # Add vagrant user to libvirt group
    ############################################################################
    - name: Add myself to libvirtd group
      action: user name={{ ansible_env['SUDO_USER'] }} groups=libvirtd append=yes
   ############################################################################
#     - name: Get Cirrus Image
#       shell: wget -P /var/lib/libvirt/images/ http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img
#     ############################################################################
#     - name: Create first vm
#       shell: virt-install --connect=qemu:///system --name=cirros1 --ram=128 --vcpus=1 --disk /var/lib/libvirt/images/cirros-0.3.4-x86_64-disk.img,format=qcow2 --import --nonetworks --noautoconsole --noreboot
#     ############################################################################
#     - name: Create more 4 VMs
#       shell: virt-clone --original cirros1 --name {{item}} --auto-clone
#       with_items:
#       - cirros2
#       - cirros3
#       - cirros3
#     ############################################################################
#     - name: Start VMs
#       shell: virsh start {{item}}
#       with_items:
#       - cirros1
#       - cirros2
#       - cirros3
#       - cirros4
    #- name: Get trusty image for uvtool
    #  shell: uvt-simplestreams-libvirt sync --source http://cloud-images.ubuntu.com/daily release=trusty arch=amd64
    #- name: UVM create VM (1)
    #  shell: uvt-kvm create teste-one
