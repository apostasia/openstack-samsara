- name: Create Nova user
  environment: "{{ admin_env }}"
  command: openstack user create --password "{{ openstack_users.nova_password }}" nova
  register: nova_create_user
  ignore_errors: true
  tags:
    - nova-controller

- name: Add admin role to Nova user and service project
  environment: "{{ admin_env }}"
  command: openstack role add --project service --user nova admin
  when: nova_create_user is succeeded
  tags:
    - nova-controller

- name: Create Service Entity Nova
  environment: "{{ admin_env }}"
  command: openstack service create --name nova --description "OpenStack Compute" compute
  when: nova_create_user is succeeded
  tags:
    - nova-controller

- name: Create Nova Service Endpoint
  environment: "{{ admin_env }}"
  command: openstack endpoint create --region RegionOne compute {{ item }} http://controller:8774/v2.1 
  with_items:
    - public
    - internal
    - admin  
  when: nova_create_user is succeeded
  tags:
    - nova-controller

- name: Install Nova Controller packages
  become: yes
  apt:
    state: present
    update_cache: yes
    pkg:
      - nova-api
      - nova-conductor
      - nova-novncproxy
      - nova-scheduler
  tags:
    - nova-controller

- name: Copy Nova config file
  template:
      src: "nova-controller.conf.j2"
      dest: "/etc/nova/nova.conf"
      owner: root
      group: root
      mode: 0644
  tags:
    - nova-controller

- name: Nova Api DB Populate
  become: yes
  environment: "{{ admin_env }}"
  shell: su -s /bin/sh -c "nova-manage api_db sync" nova
  tags:
    - nova-controller

- name: Register cell0 database
  become: yes
  environment: "{{ admin_env }}"
  shell: su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova
  tags:
    - nova-controller

- name: Nova DB Populate
  become: yes
  environment: "{{ admin_env }}"
  shell: su -s /bin/sh -c "nova-manage db sync" nova 
  tags:
    - nova-controller

- name: Create the cell1 cell
  become: yes
  environment: "{{ admin_env }}"
  shell: su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova
  tags:
    - nova-controller

- name: Restart Nova Controller Services
  become: yes
  service: name={{ item }} state=restarted
  with_items:
      - nova-api
      - nova-scheduler
      - nova-conductor
      - nova-novncproxy
  tags:
    - nova-controller
